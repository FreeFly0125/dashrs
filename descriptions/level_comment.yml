---
struct: 'LevelComment<''src>'
map_like: true
separator: '~'
indices:
  - value: 2
    type: 'Base64Decoded<''src>'
    maps_to: content
    thunk: true
    optional: true
  - value: 3
    type: u64
    maps_to: user_id
  - value: 4
    type: i32
    maps_to: likes
  - value: 6
    type: u64
    maps_to: comment_id
  - value: 7
    type: bool
    maps_to: is_flagged_spam
  - value: 9
    type: '&''src str'
    maps_to: time_since_post
  - value: 10
    type: Option<u8>
    maps_to: progress
  - value: 11
    type: u8
    maps_to: mod_level
    use_into: true
  - value: 12
    type: Option<RGBColor>
    compute: |
      self.special_color.map(|color| {
          match color {
              Color::Known(r, g, b) => RGBColor(r, g, b),
              _ => panic!("Color::Unknown passed as color of level comment"),
          }
      })
special_fields:
  special_color: |
    internal.index_12.map(|RGBColor(r, g, b)| Color::Known(r, g, b))
  user: |
    None

